#定义rootCategory的级别为DEBUG,设置appender为consle
log4cpp.rootCategory=DEBUG, console 

#定义名为rollingFile的category,级别为DEBUG，appender名为rollingFile
#这里前后的名称一致可能有一定的迷惑性，实际上这两个rollingFile都属于自定义的名称，且无需一致
#具体解释请参考上方链接中的文章
log4cpp.category.rollingFile=DEBUG,rollingFile 

# 定义名为console的appender相关的属性
#此处定义了appender的种类，布局的种类及布局的输出格式
#各项参数需参照log4cpp用法，与用代码配置的方式结合着看会比较好理解，必要时可查阅源码
log4cpp.appender.console=ConsoleAppender
log4cpp.appender.console.layout=PatternLayout
log4cpp.appender.console.layout.ConversionPattern=%d{%Y-%m-%d %H:%M:%S:%l} [%p]: [%c] %m%n 

#定义rollingFile的属性
log4cpp.appender.rollingFile=RollingFileAppender
log4cpp.appender.rollingFile.layout=PatternLayout
log4cpp.appender.rollingFile.layout.ConversionPattern=%d{%Y-%m-%d %H:%M:%S:%l} [%p]: [%c] %m%n

#设置日志路径，这里需要特别注意，log4cpp中没有为日志创建目录的选项
#当路径不存在时，日志文件将无法生成，以此代码为例，你需要保证可执行文件所在目录有log文件夹
log4cpp.appender.rollingFile.fileName=./log/observer.log

#log4cpp中没有这一项
#log4cpp.appender.rollingFile.CreateDirs=true 

#单个日志文件大小限制，只能识别整数，不能用10*1024*1024或10MB等表示，不进行设置则采用默认大小10MB
#超出则进行备份，之后会创建一个新的文件记录日志
#log4cpp.appender.rollingFile.maxFileSize=1000000 

#最大日志文件数量，超出数量限制则会删除最早产生的日志
log4cpp.appender.rollingFile.maxBackupIndex=3
